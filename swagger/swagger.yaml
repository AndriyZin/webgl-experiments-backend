openapi: 3.0.0
info:
  title: WebGL Experiments API
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/zinevich.andr/webglexperiments/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: admins
  description: Secured Admin-only calls
- name: developers
  description: Operation available to regular developers
paths:
  /auth/register:
    post:
      summary: Register user
      description: Register new user and return JWT
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          description: Reguster success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /auth/login:
    post:
      summary: Login user
      description: Returns JWT
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "200":
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid username/password supplied
  /user/{id}:
    get:
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: user id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: user not found
      security:
      - bearerAuth: []
components:
  schemas:
    User:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Johnny Depps
    body:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    inline_response_200:
      type: object
      properties:
        token:
          type: string
    body_1:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
